{"version":3,"sources":["Modal/Modal.module.css","ImageGalleryItem/ImageGalleryItem.module.css","Button/Button.module.css","ImageGallery/ImageGallery.module.css","Searchbar/Searchbar.module.css","Modal/Modal.js","Button/Button.js","Searchbar/Searchbar.js","ImageGalleryItem/ImageGalleryItem.js","ImageGallery/ImageGallery.js","Api/imageApi.js","App.js","index.js"],"names":["module","exports","Modal","onModalClick","currentImage","useEffect","window","addEventListener","closeModalByEsc","removeEventListener","e","code","className","s","Overlay","onClick","currentTarget","target","src","largeImageURL","alt","tags","split","Button","onSearch","type","Searchbar","onSubmit","useState","query","setQuery","preventDefault","SearchForm","SearchFormButton","SearchFormButtonLabel","SearchFormInput","autocomplete","name","value","autofocus","placeholder","onChange","toLowerCase","ImageGalleryItem","image","modalImage","description","ImageGalleryItemImage","ImageGallery","images","map","index","id","webformatURL","uuidv4","ImageApi","searchQuery","page","a","fetch","res","ok","message","status","Error","json","hits","totalHits","App","setImages","currentPage","setCurrentPage","totalImages","setTotalImages","showModal","setShowModal","showLoader","setShowLoader","activeImageIndex","setActiveImageIndex","fetchImageOrPhoto","length","toast","error","theme","fetchImages","scrollTo","top","document","documentElement","scrollHeight","behavior","modalToggle","color","height","width","timeout","style","textAlign","autoClose","pauseOnFocusLoss","draggable","pauseOnHover","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.73679dc3.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Overlay\":\"Modal_Overlay__2ZPdu\",\"Modal\":\"Modal_Modal__3XnM8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGalleryItem\":\"ImageGalleryItem_ImageGalleryItem__1smSS\",\"ImageGalleryItemImage\":\"ImageGalleryItem_ImageGalleryItemImage__2bR8i\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__2jkqH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGallery\":\"ImageGallery_ImageGallery__3mgT4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Searchbar\":\"Searchbar_Searchbar__yUwG9\",\"SearchForm\":\"Searchbar_SearchForm__2M3VA\",\"SearchFormButton\":\"Searchbar_SearchFormButton__Gosxg\",\"SearchFormButtonLabel\":\"Searchbar_SearchFormButtonLabel__2A4AB\",\"SearchFormInput\":\"Searchbar_SearchFormInput__2jA9x\"};","import { useEffect } from 'react';\r\nimport s from './Modal.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction Modal({ onModalClick, currentImage  }){\r\n  \r\n  useEffect(() => {\r\n    window.addEventListener('keydown', closeModalByEsc);\r\n\r\n    return () => {\r\n      window.removeEventListener('keydown', closeModalByEsc);\r\n    };\r\n  });\r\n\r\n  const closeModalByEsc = e => {\r\n    if (e.code !== 'Escape') {\r\n      return;\r\n    }\r\n\r\n    onModalClick();\r\n  };\r\n\r\n  const closeModalByBackdropClick = e => {\r\n    if (e.currentTarget === e.target) {\r\n      onModalClick();\r\n    }\r\n  };\r\n\r\n  \r\n    return (\r\n      <div className={s.Overlay} onClick={closeModalByBackdropClick}>\r\n        <div className={s.Modal}>\r\n          <img\r\n            src={currentImage.largeImageURL}\r\n            alt={currentImage.tags.split(',')[0]}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\nModal.propTypes = {\r\n  onModalClick: PropTypes.func.isRequired,\r\n  currentImage: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default Modal;","// import { Component } from 'react';\r\nimport s from './Button.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction Button({ onSearch }) {\r\n  \r\n\r\n \r\n    return (\r\n      <button type=\"button\" className={s.Button} onClick={onSearch}>\r\n        Load more\r\n      </button>\r\n    );\r\n  \r\n}\r\nButton.propTypes = {\r\n  onSearch: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Button;","import { useState } from 'react';\r\nimport s from './Searchbar.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction Searchbar({ onSubmit}) {\r\n    const [query, setQuery] = useState('');\r\n    \r\n  const handleChange = e => {\r\n      const {  value } = e.target;\r\n\r\n    setQuery(value.toLowerCase());\r\n    };\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault();       \r\n        onSubmit(query);\r\n    };\r\n    \r\n    \r\n        return (\r\n            <header className={s.Searchbar}>\r\n                <form onSubmit={handleSubmit} className={s.SearchForm}>\r\n                    <button type=\"submit\" className={s.SearchFormButton}>\r\n                        <span className={s.SearchFormButtonLabel}>Search</span>\r\n                    </button>\r\n\r\n                    <input\r\n                        className={s.SearchFormInput}\r\n                        type=\"text\"\r\n                        autocomplete=\"off\"\r\n                        name=\"query\"\r\n                        value={query}\r\n                        autofocus\r\n                        placeholder=\"Search images and photos\"\r\n                        onChange={handleChange}\r\n                    />\r\n                </form>\r\n            </header>\r\n        );\r\n    }\r\n\r\nSearchbar.propTypes = {\r\n    onSubmit: PropTypes.func.isRequired,\r\n};\r\nexport default Searchbar;","// import { Component } from 'react';\r\nimport s from './ImageGalleryItem.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction  ImageGalleryItem ({ image, modalImage, description, onModalClick }) {\r\n \r\n        return (\r\n            <li className={s.ImageGalleryItem} onClick={onModalClick}>\r\n\r\n                <img src={image}\r\n                    alt={description}\r\n                    data-src={modalImage}\r\n                    className={s.ImageGalleryItemImage} />\r\n            </li>\r\n        );\r\n    }\r\n\r\nImageGalleryItem.propTypes = {\r\n    image: PropTypes.string.isRequired,\r\n    modalImage: PropTypes.string.isRequired,\r\n    description: PropTypes.string,\r\n    onModalClick: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ImageGalleryItem;","// import { Component } from 'react';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport ImageGalleryItem from '../ImageGalleryItem';\r\nimport s from './ImageGallery.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nfunction ImageGallery({ images, onModalClick}) {\r\n   \r\n        return (\r\n            <ul className={s.ImageGallery}>\r\n                {images.map(\r\n                    ({ id, webformatURL, largeImageURL, tags }, index) => (\r\n                        <ImageGalleryItem\r\n                            onModalClick={() => onModalClick(index)}\r\n                            key={`${id}}-${uuidv4()}`}\r\n                            image={webformatURL}\r\n                            modalImage={largeImageURL}\r\n                            description={tags.split(',')[0]}\r\n                        />\r\n                    ),\r\n                )}\r\n            </ul>\r\n        );\r\n    }\r\n\r\nImageGallery.propTypes = {\r\n    images: PropTypes.arrayOf(PropTypes.object),\r\n    onModalClick: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ImageGallery;","const API_KEY = '22797563-ef7ac6a65cc3c0715a95e250f';\r\nconst BASE_URL = 'https://pixabay.com/api';\r\n\r\nclass ImageApi {\r\n  async fetchImageOrPhoto(searchQuery, page) {\r\n    const res = await fetch(\r\n      `${BASE_URL}/?q=${searchQuery}&page=${page}&key=${API_KEY}&image_type=photo&orientation=horizontal&per_page=12`,\r\n    );\r\n\r\n    if (!res.ok) {\r\n      const message = `An error has occured: ${res.status}`;\r\n      throw new Error(message);\r\n    }\r\n\r\n    const { hits, totalHits } = await res.json();\r\n    return { hits, totalHits };\r\n  }\r\n}\r\n\r\nexport default ImageApi;","import { useState, useEffect } from 'react';\nimport Loader from 'react-loader-spinner';\nimport { ToastContainer, toast } from 'react-toastify';\nimport Modal from './Modal';\nimport Button from './Button';\nimport Searchbar from './Searchbar';\nimport ImageGallery from './ImageGallery/ImageGallery';\nimport ImageApi from './Api/imageApi';\nimport './App.css';\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\n\nconst image = new ImageApi();\n\nfunction App() {\n const [query, setQuery] = useState('');\n  const [images, setImages] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [totalImages, setTotalImages] = useState(null);\n  const [showModal, setShowModal] = useState(false);\n  const [showLoader, setShowLoader] = useState(false);\n  const [activeImageIndex, setActiveImageIndex] = useState(null);\n\n  useEffect(() => {\n    if (!query) {\n      return;\n    }\n\n  async function fetchImages() {\n    \n      try {\n        setShowLoader(true);\n        const { hits, totalHits } = await image.fetchImageOrPhoto(\n          query,\n          currentPage,\n        );\n\n        if (!hits.length) {\n          toast.error('Enter proper query', { theme: 'colored' });\n        }\n\n        setImages( images => {\n          return [...images, ...hits];\n        });\n        setTotalImages(totalHits);\n      } catch (error) {\n        \n        toast.error(error.message, { theme: 'colored' });\n      } finally {\n        setShowLoader(false);\n        \n\n       \n    }\n  }\n         \n    fetchImages();\n  }, [currentPage, query]);\n\n  useEffect(() => {\n    if (images.length > 12) {\n      window.scrollTo({\n        top: document.documentElement.scrollHeight,\n        behavior: 'smooth',\n      });\n    }\n  }, [images.length]);\n\n  const modalToggle = index => {\n    setShowModal(!showModal);\n    setActiveImageIndex(index);\n  };\n\n  const handleFormSubmit = value => {\n    if (value === '') {\n      toast.error('No query entered yet...', { theme: 'colored' });\n      return;\n    }\n\n    setQuery(value);\n    setImages([]);\n    setCurrentPage(1);\n  };\n\n\n  const loadMoreImages = () => {\n    if (images.length === totalImages) {\n      toast.error('There is no more images to show', { theme: 'colored' });\n      return;\n    }\n\n    setCurrentPage(currentPage => currentPage + 1);\n  };\n \n    return (\n      <>\n        <div className=\"App\">\n          <Searchbar onSubmit={handleFormSubmit} />\n\n          {images.length > 1 && (\n            <>\n              <ImageGallery\n                images={images}\n                onModalClick={modalToggle}\n              />\n              {!showLoader && (\n                <Button onSearch={loadMoreImages} />\n              )}\n            </>\n          )}\n\n          {showLoader && (\n            <Loader\n              type=\"ThreeDots\"\n              color=\"#00BFFF\"\n              height={80}\n              width={80}\n              timeout={3000}\n              style={{ textAlign: 'center' }}\n            />\n          )}\n\n          {showModal && (\n            <Modal\n              currentImage={images[activeImageIndex]}\n              onModalClick={modalToggle}\n            />\n          )}\n        </div>\n\n        <ToastContainer\n          autoClose={3000}\n          pauseOnFocusLoss={false}\n          draggable={false}\n          pauseOnHover={false}\n        />\n      </>\n    );\n  }\n\n\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'normalize.css';\nimport 'react-toastify/dist/ReactToastify.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}